
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
	
	Текущийпользователь = ПараметрыСеанса.ТекущийПользователь;
	ТекущаяДата = ТекущаяДатаСеанса(); 
	
	СписокМоиЗадачиСотрудникам.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", ТекущийПользователь);
	СписокМоиЗадачиСотрудникам.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", ТекущаяДата); 

	СписокНовыхЗадач.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", ТекущийПользователь); 
	СписокНовыхЗадач.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", ТекущаяДата); 
	
	СписокВРаботе.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", ТекущийПользователь);
	СписокВРаботе.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", ТекущаяДата); 

	СписокИсполнено.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", ТекущийПользователь);
	СписокИсполнено.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", ТекущаяДата);
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокИсполнено
&НаКлиенте
Процедура СписокИсполненоПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	МассивЗадач = ПараметрыПеретаскивания.Значение;
	ОбновитьСтатусыЗадачКлиент(МассивЗадач, ПредопределенноеЗначение("Перечисление.СтатусыЗадачи.Исполнена"));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокВРаботе
&НаКлиенте
Процедура СписокВРаботеПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	МассивЗадач = ПараметрыПеретаскивания.Значение;
	ОбновитьСтатусыЗадачКлиент(МассивЗадач, ПредопределенноеЗначение("Перечисление.СтатусыЗадачи.ВРаботе"));
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокНовыхЗадач
&НаКлиенте
Процедура СписокНовыхЗадачПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	МассивЗадач = ПараметрыПеретаскивания.Значение;
	ОбновитьСтатусыЗадачКлиент(МассивЗадач, ПредопределенноеЗначение("Перечисление.СтатусыЗадачи.Новая"));

КонецПроцедуры
#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьСтатусыЗадачКлиент(МассивЗадач, НовыйСтатус);
	
	Если ТипЗнч(МассивЗадач) = Тип("Массив") Тогда
		ОбновитьСтатусЗадач(МассивЗадач, НовыйСтатус);
	КонецЕсли;
	
	ОповеститьОбИзменении(Тип("ЗадачаСсылка.ЗадачаПользователя"));
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьСтатусЗадач(МассивЗадач, НовыйСтатус)
	Для Каждого ТекЗадача Из МассивЗадач Цикл
		
		ЗадачаОбъект = ТекЗадача.ПолучитьОбъект();
		
		Если ЗадачаОбъект.Статус = НовыйСтатус Тогда
			Продолжить;
		КонецЕсли;
		
		ЗадачаОбъект.Статус = НовыйСтатус;
		
		Если НовыйСтатус = Перечисления.СтатусыЗадачи.Исполнена Тогда
			ЗадачаОбъект.Выполнена = Истина;
			ЗадачаОбъект.ДатаЗавершения = ТекущаяДатаСеанса();
		КонецЕсли;
		Попытка
			ЗадачаОбъект.Записать();
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("Не удалось изменить статус задачи: %1 по причине: %2", ТекЗадача, 
					ОписаниеОшибки());
			Сообщение.Сообщить();
		КонецПопытки;
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборы (ПериодСрокВыполнения = Неопределено, ПериодНазначенияЗадачи = Неопределено, Статус = Неопределено)
	СписокМоиЗадачиСотрудникам.Отбор.Элементы.Очистить();
	ЭтотОбъект.ОбновитьОтображениеДанных();
	Компоновщик = СписокМоиЗадачиСотрудникам.КомпоновщикНастроек;
	ФиксированныеНайстройки = Компоновщик.ФиксированныеНастройки;
	Отбор = ФиксированныеНайстройки.Отбор;
	Отбор.Элементы.Очистить();
	
	Если ЗначениеЗаполнено(ПериодСрокВыполнения) Тогда 
		ФильтрПериодСрокВыполнения = ПериодСрокВыполнения;
		НовыйЭлемент1 = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлемент1.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СрокВыполнения");
		НовыйЭлемент1.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		НовыйЭлемент1.Использование = Истина;
		НовыйЭлемент1.ПравоеЗначение = НачалоДня(ФильтрПериодСрокВыполнения.ДатаНачала); 
		
		НовыйЭлемент2 = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлемент2.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СрокВыполнения");
		НовыйЭлемент2.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
		НовыйЭлемент2.Использование = Истина;
		НовыйЭлемент2.ПравоеЗначение = КонецДня(ФильтрПериодСрокВыполнения.ДатаОкончания); 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПериодНазначенияЗадачи) Тогда
		ФильтрПериодНазначения = ПериодНазначенияЗадачи;
		НовыйЭлемент1 = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлемент1.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Дата");
		НовыйЭлемент1.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		НовыйЭлемент1.Использование = Истина;
		НовыйЭлемент1.ПравоеЗначение = НачалоДня(ФильтрПериодНазначения.ДатаНачала); 
		
		НовыйЭлемент2 = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлемент2.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Дата");
		НовыйЭлемент2.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
		НовыйЭлемент2.Использование = Истина;
		НовыйЭлемент2.ПравоеЗначение = КонецДня(ФильтрПериодНазначения.ДатаОкончания);
	КонецЕсли;  
	
	Если ЗначениеЗаполнено(Статус) Тогда 
		НовыйЭлемент1 = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлемент1.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Статус");
		НовыйЭлемент1.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		НовыйЭлемент1.Использование = Истина;
		НовыйЭлемент1.ПравоеЗначение = Статус; 
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ДекорацияПриветствие.Заголовок = СтрШаблон("Здравствуйте, %1! Сегодня %2",
		ПользователиКлиент.ТекущийПользователь(), Формат(ОбщегоНазначенияКлиент.ДатаСеанса(),  "ДФ=""дд ММММ гггг 'г.'"""));
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник) 
	Если ИмяСобытия = "Записана задача" Тогда
		Элементы.СписокВРаботе.Обновить();
		Элементы.СписокИсполнено.Обновить();
		Элементы.СписокНовыхЗадач.Обновить();
		Элементы.СписокМоиЗадачиСотрудникам.Обновить();
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПериодСрокВыполненияПриИзменении(Элемент)
	УстановитьОтборы(ПериодСрокВыполнения, ПериодНазначенияЗадачи, ОтборСтатус);
КонецПроцедуры

&НаКлиенте
Процедура ПериодНазначенияЗадачиПриИзменении(Элемент)
	УстановитьОтборы(ПериодСрокВыполнения, ПериодНазначенияЗадачи, ОтборСтатус);
КонецПроцедуры

&НаКлиенте
Процедура ОтборСтатусПриИзменении(Элемент)
	УстановитьОтборы(ПериодСрокВыполнения, ПериодНазначенияЗадачи, ОтборСтатус);
КонецПроцедуры

#КонецОбласти