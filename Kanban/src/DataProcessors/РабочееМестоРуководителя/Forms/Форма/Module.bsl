
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Записана задача" Тогда
		Элементы.СписокЗадач.Обновить();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекущаяДата = ТекущаяДатаСеанса(); 
	СписокЗадач.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", ТекущаяДата); 	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ЗаполнитьДанные();
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	ЗаполнитьДанные();
КонецПроцедуры  

&НаКлиенте
Процедура ЗаполнитьДанные()
	ДанныеСотрудника = ДанныеПоСотруднику(Сотрудник);
	ВсегоЗадач = ДанныеСотрудника["ВсегоЗадач"];
	ПросроченныхЗадач = ДанныеСотрудника["ПросроченныхЗадач"];
	ВыполненныхВоВремя = ДанныеСотрудника["ВыполненныхВоВремя"];
	ОбщееВремя = ДанныеСотрудника["ОбщееВремя"];
КонецПроцедуры  

&НаСервереБезКонтекста
Функция ДанныеПоСотруднику(Сотрудник)
    ВсегоЗадач = 0;
	ПросроченныхЗадач = 0;
	ВыполненныхВоВремя = 0;
	ОбщееВремя = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗадачаПользователя.Наименование КАК Наименование,
		|	ЗадачаПользователя.Статус КАК Статус,
		|	ЗадачаПользователя.СрокВыполнения КАК СрокВыполнения,
		|	ЗадачаПользователя.ДатаЗавершения КАК ДатаЗавершения,
		|	1 КАК Количество,
		|	ЗадачаПользователя.Дата КАК Дата
		|ПОМЕСТИТЬ ВТ_Задачи
		|ИЗ
		|	Задача.ЗадачаПользователя КАК ЗадачаПользователя
		|ГДЕ
		|	ЗадачаПользователя.Исполнитель = &Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВТ_Задачи.Количество) КАК ОбщееКоличество
		|ИЗ
		|	ВТ_Задачи КАК ВТ_Задачи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВТ_Задачи.Количество) КАК КоличествоПросроченных
		|ИЗ
		|	ВТ_Задачи КАК ВТ_Задачи
		|ГДЕ
		|	ВТ_Задачи.СрокВыполнения < &ТекущаяДата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Задачи.Количество КАК КоличествоВоВремя
		|ИЗ
		|	ВТ_Задачи КАК ВТ_Задачи
		|ГДЕ
		|	ВТ_Задачи.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗадачи.Исполнена)
		|	И ВТ_Задачи.СрокВыполнения >= &ТекущаяДата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Задачи.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗадачи.Исполнена)
		|				ТОГДА ЦЕЛ(РАЗНОСТЬДАТ(ВТ_Задачи.Дата, ВТ_Задачи.ДатаЗавершения, МИНУТА) / 60 + 0.99999)
		|			ИНАЧЕ ЦЕЛ(РАЗНОСТЬДАТ(ВТ_Задачи.Дата, &ТекущаяДата, МИНУТА) / 60 + 0.99999)
		|		КОНЕЦ) КАК ОбщееВремя
		|ИЗ
		|	ВТ_Задачи КАК ВТ_Задачи";
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());

	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаОбщееКоличество = РезультатЗапроса[1].Выбрать();
	
	Если ВыборкаОбщееКоличество.Следующий() Тогда
		ВсегоЗадач = ВыборкаОбщееКоличество.ОбщееКоличество;
	КонецЕсли;
	
	ВыборкаПросроченныхЗадач = РезультатЗапроса[2].Выбрать();
	
	Если ВыборкаПросроченныхЗадач.Следующий() Тогда
		ПросроченныхЗадач = ВыборкаПросроченныхЗадач.КоличествоПросроченных;
	КонецЕсли; 
	
	ВыборкаВыполненныхВоВремя = РезультатЗапроса[3].Выбрать();
	
	Если ВыборкаВыполненныхВоВремя.Следующий() Тогда
		ВыполненныхВоВремя = ВыборкаВыполненныхВоВремя.КоличествоВоВремя;
	КонецЕсли; 
	
	ВыборкаОбщееВремя = РезультатЗапроса[4].Выбрать();
	
	Если ВыборкаОбщееВремя.Следующий() Тогда
		ОбщееВремя = ВыборкаОбщееВремя.ОбщееВремя;
	КонецЕсли;
	
	ДанныеСотрудника = Новый Структура();
	ДанныеСотрудника.Вставить("ВсегоЗадач", ВсегоЗадач); 
	ДанныеСотрудника.Вставить("ПросроченныхЗадач", ПросроченныхЗадач);
	ДанныеСотрудника.Вставить("ВыполненныхВоВремя", ВыполненныхВоВремя);
	ДанныеСотрудника.Вставить("ОбщееВремя", ОбщееВремя);
	Возврат ДанныеСотрудника;
КонецФункции


&НаКлиенте
Процедура ОтборСтатусПриИзменении(Элемент)
	УстановитьОтборы(ПериодСрокВыполнения, ПериодНазначенияЗадачи, ОтборСтатус);
КонецПроцедуры


&НаКлиенте
Процедура ПериодСрокВыполненияПриИзменении(Элемент)
	УстановитьОтборы(ПериодСрокВыполнения, ПериодНазначенияЗадачи, ОтборСтатус);

КонецПроцедуры


&НаКлиенте
Процедура ПериодНазначенияЗадачиПриИзменении(Элемент)
	УстановитьОтборы(ПериодСрокВыполнения, ПериодНазначенияЗадачи, ОтборСтатус);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборы (ПериодСрокВыполнения = Неопределено, ПериодНазначенияЗадачи = Неопределено, Статус = Неопределено)
	СписокЗадач.Отбор.Элементы.Очистить();
	ЭтотОбъект.ОбновитьОтображениеДанных();
	Компоновщик = СписокЗадач.КомпоновщикНастроек;
	ФиксированныеНайстройки = Компоновщик.ФиксированныеНастройки;
	Отбор = ФиксированныеНайстройки.Отбор;
	Отбор.Элементы.Очистить();
	
	Если ЗначениеЗаполнено(ПериодСрокВыполнения) Тогда 
		ФильтрПериодСрокВыполнения = ПериодСрокВыполнения;
		НовыйЭлемент1 = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлемент1.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СрокВыполнения");
		НовыйЭлемент1.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		НовыйЭлемент1.Использование = Истина;
		НовыйЭлемент1.ПравоеЗначение = НачалоДня(ФильтрПериодСрокВыполнения.ДатаНачала); 
		
		НовыйЭлемент2 = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлемент2.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СрокВыполнения");
		НовыйЭлемент2.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
		НовыйЭлемент2.Использование = Истина;
		НовыйЭлемент2.ПравоеЗначение = КонецДня(ФильтрПериодСрокВыполнения.ДатаОкончания); 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПериодНазначенияЗадачи) Тогда
		ФильтрПериодНазначения = ПериодНазначенияЗадачи;
		НовыйЭлемент1 = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлемент1.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Дата");
		НовыйЭлемент1.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		НовыйЭлемент1.Использование = Истина;
		НовыйЭлемент1.ПравоеЗначение = НачалоДня(ФильтрПериодНазначения.ДатаНачала); 
		
		НовыйЭлемент2 = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлемент2.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Дата");
		НовыйЭлемент2.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
		НовыйЭлемент2.Использование = Истина;
		НовыйЭлемент2.ПравоеЗначение = КонецДня(ФильтрПериодНазначения.ДатаОкончания);
	КонецЕсли;  
	
	Если ЗначениеЗаполнено(Статус) Тогда 
		НовыйЭлемент1 = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлемент1.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Статус");
		НовыйЭлемент1.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		НовыйЭлемент1.Использование = Истина;
		НовыйЭлемент1.ПравоеЗначение = Статус; 
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АнализПродуктивностиРаботыСотрудников(Команда)
	ОткрытьФорму("Отчет.АнализПродуктивностиРаботыСотрудников.Форма.ФормаОтчета",, ЭтаФорма);
КонецПроцедуры
